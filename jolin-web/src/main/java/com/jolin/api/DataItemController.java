package com.jolin.api;import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;import com.github.xiaoymin.knife4j.annotations.ApiSupport;import com.jolin.common.api.BaseTreeController;import com.jolin.common.dto.PageDTO;import com.jolin.common.dto.ResultDTO;import com.jolin.dto.DataItemDTO;import com.jolin.service.IDataItemService;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import org.apache.commons.lang3.StringUtils;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@Api(tags = {"11.数据字典操作接口"})@ApiSupport(order = 11)@RequestMapping("/sys/dataitem")public class DataItemController extends BaseTreeController<IDataItemService, DataItemDTO> {    @ApiOperation(value = "8.分页查询相同parentId下数据字典")    @ApiOperationSupport(order = 8)    @PostMapping(value = "/query/all")    @Deprecated    public ResultDTO queryAllTree(@RequestBody PageDTO<DataItemDTO> pageDTO) {        if (StringUtils.isEmpty(pageDTO.getFilters().getParentId())) {            pageDTO.getFilters().setParentId("");        }        pageDTO = iBaseService.findDataItemByTypePageable(pageDTO);        List tree = iBaseService.listToTree(pageDTO.getList(), pageDTO.getFilters() == null ? null : pageDTO.getFilters().getParentId());        pageDTO.setList(tree);        return new ResultDTO(pageDTO);    }    @ApiOperation(value = "9.按一级数据字典分页")    @ApiOperationSupport(order = 8)    @PostMapping(value = "/query/page")    public ResultDTO page(@RequestBody PageDTO<DataItemDTO> pageDTO) {        pageDTO = iBaseService.page(pageDTO);        return new ResultDTO(pageDTO);    }    @ApiOperation(value = "12.根据path和name模糊查询")    @ApiOperationSupport(order = 12)    @PostMapping(value = "/findByPathAndName")    public ResultDTO findByPathAndName(@RequestBody PageDTO<DataItemDTO> pageDTO) {        DataItemDTO dataItemDTO = pageDTO.getFilters();        List byPathAndName = iBaseService.findByPathAndName(dataItemDTO);        pageDTO.setList(byPathAndName);        return new ResultDTO(pageDTO);    }    @GetMapping("/find-data-item-by-type-name")    @ApiOperation(value = "13.根据数据字典类型查询数据字典")    @ApiOperationSupport(order = 13)    public ResultDTO findByPathAndName(@RequestParam String dataItemTypeName) {        List<DataItemDTO> dataItems = iBaseService.findDataItemByDataItemTypeName(dataItemTypeName);        return new ResultDTO(dataItems);    }}