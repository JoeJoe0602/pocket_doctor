---

#Global datasource Configuration
spring:
  datasource: # Initialize the sql configuration
    initialization-mode: AlWAYS
    continue-on-error: true                        #If an error is encountered while initializing the database, the default is false
    test-on-borrow: false                           #Whether to test the connection when borrowing it from the connection pool.
    test-while-idle: true                           #Whether to perform a connection test when the connection is idle.
    time-between-eviction-runs-millis: 3600000    #Database connection time

---
# Mysql Configuration
spring:
  datasource:
    driver-class-name: "com.mysql.cj.jdbc.Driver"     # Mysql 8 Configuration
    url: "jdbc:mysql://81.70.204.139:3306/pocket_doctor?serverTimezone=GMT%2B8&amp&characterEncoding=utf-8&useSSL=false"  # Mysql 8 Configuration
    username: pocket_doctor
    password: pocket_doctor
    data-username: pocket_doctor
    data-password: pocket_doctor
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
---
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://jolin.com/.well-known/jwks.json  #The address of the interface to request the key from OAuth2
---

---
# Redis Configuration
spring:
  redis:
    database: 2
    host: 127.0.0.1
    port: 6379
    timeout: 3000
#    password: admin

# Log Configuration
logging:
  level:
    org.springframework.web: debug
    com.jolin: debug

# swagger2 Whether to enable Swagger2
knife4j:

  #Enabling Enhanced Configuration
  enable: true

  #In the production environment, you are advised to set this parameter to true to enable production environment masking
  production: false

---
# TODO Mybatis configuration can be deleted if jpa is used
mybatis-plus:

  #Scan mapper.xml in multiple modules
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.jolin.domain     #MyBaits alias package scan path, which allows you to alias classes in a package. After registration, you can use the class name directly in the corresponding XML file of Mapper instead of using the fully qualified class name
  #type-aliases-super-type: java.lang.Object    #This configuration should be used with typeAliasesPackage. If this property is configured, only domain objects with this class as their parent class in the path will be scanned.
  global-config:
    db-config:
      logic-delete-field: is_delete        #Global logic to delete field values 3.3.0 support, see below for details.
      logic-delete-value: 1                # Logical deleted value (default is 1)
      logic-not-delete-value: 0            # Logical undeleted value (default is 0)
  configuration:
    map-underscore-to-camel-case: true     # Whether to enable automatic camel case mapping if it is clear that @TableField is not required by the specification
    cache-enabled: false
    call-setters-on-nulls: true
